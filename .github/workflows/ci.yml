name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libx11-dev

      - name: Cache rustup (optional)
        uses: actions/cache@v3
        with:
          path: ~/.rustup
          key: ${{ runner.os }}-rustup-${{ hashFiles('**/rust-toolchain') }}
          restore-keys: ${{ runner.os }}-rustup-

      - name: Cache cargo registry and git
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install sccache
        run: cargo install sccache

      - name: Set RUSTC_WRAPPER
        run: echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV

      - name: Cache sccache
        uses: actions/cache@v3
        with:
          path: ~/.cache/sccache
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-sccache-

      - name: Cache target (debug)
        uses: actions/cache@v3
        with:
          path: target/debug
          key: ${{ runner.os }}-target-debug-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-target-debug-

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Lint
        run: cargo clippy -- -D warnings

      - name: Test debug
        run: cargo test --verbose

      - name: Cache target (release)
        uses: actions/cache@v3
        with:
          path: target/release
          key: ${{ runner.os }}-target-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-target-release-

      - name: Test release
        run: cargo test --release --verbose
